openapi: 3.0.0
paths:
  /api/v1/auth/send-otp:
    post:
      operationId: sendOtp
      summary: Send OTP to phone number
      description: Sends a one-time password (OTP) to the specified phone number for authentication
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOtpDto'
      responses:
        '201':
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sent:
                    type: boolean
                    example: true
                  devCode:
                    type: string
                    example: '123456'
                    description: Development code (only in dev environment)
        '400':
          description: Invalid phone number or context
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: Invalid phone number format
                  error:
                    type: string
                    example: Bad Request
      tags:
        - auth
  /api/v1/auth/verify-otp:
    post:
      operationId: verifyOtp
      summary: Verify OTP and complete registration/login
      description: Verifies the OTP code and completes user registration or login process
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOtpDto'
      responses:
        '201':
          description: OTP verified successfully and user authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  tokens:
                    type: object
                    properties:
                      access:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                      refresh:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  me:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 507f1f77bcf86cd799439011
                      phone:
                        type: string
                        example: '+966501234567'
                      preferredCurrency:
                        type: string
                        example: USD
        '400':
          description: Missing required fields for engineer registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: number
                    example: 400
                  message:
                    type: string
                    example: المسمى الوظيفي مطلوب للمهندسين
                  error:
                    type: string
                    example: Bad Request
        '401':
          description: Invalid OTP code
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: number
                    example: 401
                  message:
                    type: string
                    example: رمز التحقق غير صالح
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - auth
  /api/v1/auth/set-password:
    post:
      operationId: setPassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordDto'
      responses:
        '201':
          description: ''
      tags:
        - auth
      security:
        - bearer: []
  /api/v1/auth/preferred-currency:
    patch:
      operationId: updatePreferredCurrency
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePreferredCurrencyDto'
      responses:
        '200':
          description: ''
      tags:
        - auth
      security:
        - bearer: []
  /api/v1/auth/forgot-password:
    post:
      operationId: forgot
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordDto'
      responses:
        '201':
          description: ''
      tags:
        - auth
  /api/v1/auth/reset-password:
    post:
      operationId: reset
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
      responses:
        '201':
          description: ''
      tags:
        - auth
  /api/v1/auth/me:
    get:
      operationId: me
      summary: Get current user profile
      description: Retrieves the current authenticated user profile and capabilities
      parameters: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 507f1f77bcf86cd799439011
                      phone:
                        type: string
                        example: '+966501234567'
                      firstName:
                        type: string
                        example: أحمد
                      lastName:
                        type: string
                        example: محمد
                      gender:
                        type: string
                        example: male
                        enum:
                          - male
                          - female
                      jobTitle:
                        type: string
                        example: مهندس كهرباء
                      isAdmin:
                        type: boolean
                        example: false
                  capabilities:
                    type: object
                    properties:
                      customer_capable:
                        type: boolean
                        example: true
                      engineer_capable:
                        type: boolean
                        example: false
                      wholesale_capable:
                        type: boolean
                        example: false
        '401':
          description: Invalid or missing JWT token
      tags:
        - auth
      security:
        - bearer: []
    patch:
      operationId: updateMe
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - auth
      security:
        - bearer: []
    delete:
      operationId: deleteMe
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - auth
      security:
        - bearer: []
  /api/v1/auth/admin/pending:
    get:
      operationId: pending
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - auth
      security:
        - bearer: []
  /api/v1/auth/admin/approve:
    post:
      operationId: approve
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - auth
      security:
        - bearer: []
  /api/v1/auth/create-super-admin:
    post:
      operationId: createSuperAdmin
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - auth
  /api/v1/auth/dev-login:
    post:
      operationId: devLogin
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - auth
  /api/v1/favorites:
    get:
      operationId: listFavorites
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
    post:
      operationId: addFavorite
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFavoriteDto'
      responses:
        '201':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
    delete:
      operationId: removeFavorite
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFavoriteDto'
      responses:
        '200':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
  /api/v1/favorites/{id}:
    patch:
      operationId: updateFavorite
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFavoriteDto'
      responses:
        '200':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
  /api/v1/favorites/clear/all:
    delete:
      operationId: clearFavorites
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
  /api/v1/favorites/count:
    get:
      operationId: getCount
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
  /api/v1/favorites/by-tags:
    get:
      operationId: getFavoritesByTags
      parameters:
        - name: tags
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
  /api/v1/favorites/sync:
    post:
      operationId: syncFromGuest
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncFavoritesDto'
      responses:
        '201':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
  /api/v1/favorites/{id}/view:
    post:
      operationId: incrementView
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - favorites-user
      security:
        - bearer: []
  /api/v1/favorites/guest:
    get:
      operationId: listFavorites
      parameters:
        - name: deviceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - favorites-guest
    post:
      operationId: addFavorite
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestAddFavoriteDto'
      responses:
        '201':
          description: ''
      tags:
        - favorites-guest
    delete:
      operationId: removeFavorite
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestRemoveFavoriteDto'
      responses:
        '200':
          description: ''
      tags:
        - favorites-guest
  /api/v1/favorites/guest/clear:
    delete:
      operationId: clearFavorites
      parameters:
        - name: deviceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - favorites-guest
  /api/v1/favorites/guest/count:
    get:
      operationId: getCount
      parameters:
        - name: deviceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - favorites-guest
  /api/v1/admin/favorites/stats:
    get:
      operationId: getStats
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - favorites-admin
      security:
        - bearer: []
  /api/v1/admin/favorites/most-favorited:
    get:
      operationId: getMostFavorited
      parameters:
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - favorites-admin
      security:
        - bearer: []
  /api/v1/admin/favorites/product/{productId}/count:
    get:
      operationId: getProductCount
      parameters:
        - name: productId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - favorites-admin
      security:
        - bearer: []
  /api/v1/admin/favorites/user/{userId}/count:
    get:
      operationId: getUserCount
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - favorites-admin
      security:
        - bearer: []
  /api/v1/admin/products:
    post:
      operationId: createProduct
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
    get:
      operationId: listProducts
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/admin/products/{id}:
    get:
      operationId: getProduct
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
    patch:
      operationId: updateProduct
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
    delete:
      operationId: deleteProduct
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/admin/products/{id}/restore:
    post:
      operationId: restoreProduct
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/admin/products/{id}/update-stats:
    post:
      operationId: updateStats
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/admin/products/stats/summary:
    get:
      operationId: getStats
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/admin/products/{productId}/variants:
    post:
      operationId: createVariant
      parameters:
        - name: productId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVariantDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
    get:
      operationId: listVariants
      parameters:
        - name: productId
          required: true
          in: path
          schema:
            type: string
        - name: includeDeleted
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/admin/products/variants/{id}:
    patch:
      operationId: updateVariant
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVariantDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
    delete:
      operationId: deleteVariant
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/admin/products/{productId}/variants/generate:
    post:
      operationId: generateVariants
      parameters:
        - name: productId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateVariantsDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-products
      security:
        - bearer: []
  /api/v1/products:
    get:
      operationId: products
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - catalog-public
  /api/v1/products/count:
    get:
      operationId: getProductsCount
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - products
  /api/v1/products/{id}:
    get:
      operationId: getProduct
      summary: Get product details
      description: Retrieves detailed information about a specific product
      parameters:
        - name: id
          required: true
          in: path
          description: Product ID
          schema:
            example: 507f1f77bcf86cd799439011
            type: string
      responses:
        '200':
          description: Product details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 507f1f77bcf86cd799439011
                      name:
                        type: string
                        example: Solar Panel 300W
                      description:
                        type: string
                        example: High efficiency solar panel with 20% efficiency
                      price:
                        type: number
                        example: 299.99
                      currency:
                        type: string
                        example: USD
                      images:
                        type: array
                        items:
                          type: string
                      variants:
                        type: array
                        items:
                          type: object
                      specifications:
                        type: object
                      category:
                        type: object
                      brand:
                        type: object
                      isFeatured:
                        type: boolean
                        example: true
                      isNew:
                        type: boolean
                        example: false
                      views:
                        type: number
                        example: 150
        '404':
          description: Product not found
      tags:
        - products
  /api/v1/products/featured/list:
    get:
      operationId: getFeatured
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - products
  /api/v1/products/new/list:
    get:
      operationId: getNew
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - products
  /api/v1/admin/attributes:
    post:
      operationId: createAttribute
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttributeDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
    get:
      operationId: listAttributes
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
  /api/v1/admin/attributes/{id}:
    get:
      operationId: getAttribute
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
    patch:
      operationId: updateAttribute
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAttributeDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
    delete:
      operationId: deleteAttribute
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
  /api/v1/admin/attributes/{id}/restore:
    post:
      operationId: restoreAttribute
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
  /api/v1/admin/attributes/{attributeId}/values:
    post:
      operationId: createValue
      parameters:
        - name: attributeId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttributeValueDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
    get:
      operationId: listValues
      parameters:
        - name: attributeId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
  /api/v1/admin/attributes/values/{id}:
    patch:
      operationId: updateValue
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAttributeValueDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
    delete:
      operationId: deleteValue
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
  /api/v1/admin/attributes/stats/summary:
    get:
      operationId: getStats
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-attributes
      security:
        - bearer: []
  /api/v1/attributes:
    get:
      operationId: listAttributes
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - attributes-public
  /api/v1/attributes/filterable:
    get:
      operationId: getFilterableAttributes
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - attributes-public
  /api/v1/attributes/{id}:
    get:
      operationId: getAttribute
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - attributes-public
  /api/v1/admin/categories:
    post:
      operationId: createCategory
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
    get:
      operationId: listCategories
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
  /api/v1/admin/categories/tree:
    get:
      operationId: getCategoryTree
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
  /api/v1/admin/categories/{id}:
    get:
      operationId: getCategory
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
    patch:
      operationId: updateCategory
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
    delete:
      operationId: deleteCategory
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
  /api/v1/admin/categories/{id}/restore:
    post:
      operationId: restoreCategory
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
  /api/v1/admin/categories/{id}/permanent:
    delete:
      operationId: permanentDeleteCategory
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
  /api/v1/admin/categories/{id}/update-stats:
    post:
      operationId: updateCategoryStats
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
  /api/v1/admin/categories/stats/summary:
    get:
      operationId: getStats
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-categories
      security:
        - bearer: []
  /api/v1/categories:
    get:
      operationId: listCategories
      parameters:
        - name: parentId
          required: true
          in: query
          schema:
            type: string
        - name: isFeatured
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - categories-public
  /api/v1/categories/tree:
    get:
      operationId: getCategoryTree
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - categories-public
  /api/v1/categories/{id}:
    get:
      operationId: getCategory
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - categories-public
  /api/v1/categories/featured/list:
    get:
      operationId: getFeaturedCategories
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - categories-public
  /api/v1/notifications/send:
    post:
      operationId: sendNotification
      summary: Send notification to multiple channels
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNotificationDto'
      responses:
        '201':
          description: Notification sent successfully
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/template/{templateId}/send:
    post:
      operationId: sendTemplateNotification
      summary: Send notification using template
      parameters:
        - name: templateId
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: Template notification sent successfully
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/history:
    get:
      operationId: getNotificationHistory
      summary: Get notification history
      parameters:
        - name: userId
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: offset
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: Notification history retrieved successfully
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/statistics:
    get:
      operationId: getNotificationStatistics
      summary: Get notification statistics
      parameters:
        - name: startDate
          required: true
          in: query
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Notification statistics retrieved successfully
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/templates:
    post:
      operationId: createTemplate
      summary: Create notification template
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateDto'
      responses:
        '201':
          description: Template created successfully
      tags:
        - notifications
      security:
        - bearer: []
    get:
      operationId: getTemplates
      summary: Get notification templates
      parameters: []
      responses:
        '200':
          description: Templates retrieved successfully
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/subscribe/{userId}/{topic}:
    post:
      operationId: subscribeToTopic
      summary: Subscribe user to topic
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
        - name: topic
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: User subscribed successfully
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/unsubscribe/{userId}/{topic}:
    post:
      operationId: unsubscribeFromTopic
      summary: Unsubscribe user from topic
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
        - name: topic
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: User unsubscribed successfully
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/test/fcm:
    get:
      operationId: testFCM
      summary: Test FCM configuration
      parameters:
        - name: token
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: FCM test completed
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/test/sms:
    get:
      operationId: testSMS
      summary: Test SMS configuration
      parameters:
        - name: phone
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: SMS test completed
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/notifications/test/email:
    get:
      operationId: testEmail
      summary: Test email configuration
      parameters:
        - name: email
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Email test completed
      tags:
        - notifications
      security:
        - bearer: []
  /api/v1/admin/notifications:
    get:
      operationId: list
      summary: List notifications with filters
      parameters: []
      responses:
        '200':
          description: Notifications retrieved successfully
      tags:
        - notifications-admin
      security:
        - bearer: []
    post:
      operationId: create
      summary: Create a new notification
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateNotificationDto'
      responses:
        '201':
          description: Notification created successfully
      tags:
        - notifications-admin
      security:
        - bearer: []
  /api/v1/admin/notifications/templates:
    get:
      operationId: getTemplates
      summary: Get available notification templates
      parameters: []
      responses:
        '200':
          description: Templates retrieved successfully
      tags:
        - notifications-admin
      security:
        - bearer: []
  /api/v1/admin/notifications/{id}:
    get:
      operationId: getById
      summary: Get notification by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Notification retrieved successfully
        '404':
          description: Notification not found
      tags:
        - notifications-admin
      security:
        - bearer: []
    put:
      operationId: update
      summary: Update notification
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUpdateNotificationDto'
      responses:
        '200':
          description: Notification updated successfully
        '404':
          description: Notification not found
      tags:
        - notifications-admin
      security:
        - bearer: []
    delete:
      operationId: delete
      summary: Delete notification
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Notification deleted successfully
        '404':
          description: Notification not found
      tags:
        - notifications-admin
      security:
        - bearer: []
  /api/v1/admin/notifications/{id}/send:
    post:
      operationId: send
      summary: Send notification
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSendNotificationDto'
      responses:
        '200':
          description: Notification sent successfully
        '404':
          description: Notification not found
      tags:
        - notifications-admin
      security:
        - bearer: []
  /api/v1/admin/notifications/stats/overview:
    get:
      operationId: getStats
      summary: Get notification statistics
      parameters: []
      responses:
        '200':
          description: Statistics retrieved successfully
      tags:
        - notifications-admin
      security:
        - bearer: []
  /api/v1/admin/notifications/bulk/send:
    post:
      operationId: bulkSend
      summary: Send bulk notifications
      parameters: []
      responses:
        '200':
          description: Bulk notifications sent successfully
      tags:
        - notifications-admin
      security:
        - bearer: []
  /api/v1/admin/notifications/test:
    post:
      operationId: test
      summary: Test notification (send to specific user)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminTestDto'
      responses:
        '200':
          description: Test notification sent successfully
      tags:
        - notifications-admin
      security:
        - bearer: []
  /api/v1/admin/user-analytics/user/{userId}:
    get:
      operationId: getUserDetailedStats
      summary: الحصول على تفاصيل وإحصائيات مستخدم واحد
      description: يعرض جميع الإحصائيات والتفاصيل الشاملة لمستخدم معين
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: تم جلب بيانات المستخدم بنجاح
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailedStatsDto'
        '404':
          description: المستخدم غير موجود
      tags:
        - user-analytics
      security:
        - bearer: []
  /api/v1/admin/user-analytics/rankings:
    get:
      operationId: getCustomerRankings
      summary: ترتيب العملاء حسب القيمة والأداء
      description: يعرض قائمة مرتبة للعملاء حسب المبلغ المنفق وعدد الطلبات
      parameters:
        - name: limit
          required: false
          in: query
          description: عدد العملاء المراد عرضهم
          schema:
            default: 50
            type: number
      responses:
        '200':
          description: تم جلب ترتيب العملاء بنجاح
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerRankingDto'
      tags:
        - user-analytics
      security:
        - bearer: []
  /api/v1/admin/user-analytics/overview:
    get:
      operationId: getOverallAnalytics
      summary: الإحصائيات العامة للمستخدمين
      description: يعرض إحصائيات شاملة عن جميع المستخدمين في النظام
      parameters: []
      responses:
        '200':
          description: تم جلب الإحصائيات العامة بنجاح
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverallUserAnalyticsDto'
      tags:
        - user-analytics
      security:
        - bearer: []
  /api/v1/admin/user-analytics/analyze:
    post:
      operationId: analyzeUsers
      summary: تحليل متقدم للمستخدمين
      description: تحليل شامل للمستخدمين حسب المعايير المحددة
      parameters:
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: limit
          required: true
          in: query
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserStatsFilterDto'
      responses:
        '200':
          description: تم التحليل بنجاح
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserStatsDto'
      tags:
        - user-analytics
      security:
        - bearer: []
  /api/v1/admin/user-analytics/reports/top-customers:
    get:
      operationId: getTopCustomersReport
      summary: تقرير أفضل العملاء
      description: تقرير مفصل عن أفضل العملاء حسب معايير متعددة
      parameters:
        - name: period
          required: true
          in: query
          schema:
            type: string
        - name: metric
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: تم إنشاء التقرير بنجاح
      tags:
        - user-analytics
      security:
        - bearer: []
  /api/v1/admin/user-analytics/reports/customer-segments:
    get:
      operationId: getCustomerSegmentsReport
      summary: تقرير شرائح العملاء
      description: تقرير تحليلي لشرائح العملاء المختلفة
      parameters: []
      responses:
        '200':
          description: تم إنشاء التقرير بنجاح
      tags:
        - user-analytics
      security:
        - bearer: []
  /api/v1/admin/user-analytics/alerts/churn-risk:
    get:
      operationId: getChurnRiskAlerts
      summary: تنبيهات مخاطر فقدان العملاء
      description: قائمة العملاء المعرضين لخطر فقدانهم
      parameters: []
      responses:
        '200':
          description: تم جلب التنبيهات بنجاح
      tags:
        - user-analytics
      security:
        - bearer: []
  /api/v1/checkout/preview:
    post:
      operationId: preview
      summary: Preview checkout
      description: Preview order details, pricing, and delivery options before confirmation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutPreviewDto'
      responses:
        '200':
          description: Checkout preview generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                      subtotal:
                        type: number
                        example: 599.98
                      shipping:
                        type: number
                        example: 25
                      tax:
                        type: number
                        example: 62.5
                      total:
                        type: number
                        example: 687.48
                      currency:
                        type: string
                        example: USD
                      deliveryOptions:
                        type: array
                        items:
                          type: object
        '400':
          description: Invalid cart or currency
        '401':
          description: Invalid or missing JWT token
      tags:
        - checkout
      security:
        - bearer: []
  /api/v1/checkout/confirm:
    post:
      operationId: confirm
      summary: Confirm checkout
      description: Confirm and process the checkout with payment and delivery details
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutConfirmDto'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      orderId:
                        type: string
                        example: 507f1f77bcf86cd799439011
                      orderNumber:
                        type: string
                        example: ORD-2024-001
                      status:
                        type: string
                        example: PENDING
                      totalAmount:
                        type: number
                        example: 687.48
                      currency:
                        type: string
                        example: USD
                      paymentUrl:
                        type: string
                        example: https://payment.example.com/checkout/...
                      estimatedDelivery:
                        type: string
                        example: '2024-01-20T00:00:00Z'
        '400':
          description: Invalid payment method or delivery address
        '401':
          description: Invalid or missing JWT token
      tags:
        - checkout
      security:
        - bearer: []
  /api/v1/payments/webhook:
    post:
      operationId: webhook
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookDto'
      responses:
        '201':
          description: ''
      tags:
        - checkout
  /api/v1/orders:
    get:
      operationId: getMyOrders
      summary: Get user orders
      parameters:
        - name: page
          required: false
          in: query
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 20
            type: number
        - name: status
          required: false
          in: query
          schema:
            enum:
              - pending
              - confirmed
              - processing
              - ready_to_ship
              - shipped
              - out_for_delivery
              - delivered
              - completed
              - cancelled
              - refunded
              - returned
              - payment_failed
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/orders/{id}:
    get:
      operationId: getOrderDetails
      summary: Get order details
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/orders/{id}/cancel:
    post:
      operationId: cancelOrder
      summary: Cancel order
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderDto'
      responses:
        '201':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/admin/orders:
    get:
      operationId: getAllOrders
      summary: Get all orders (Admin)
      parameters:
        - name: page
          required: false
          in: query
          schema:
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 20
            type: number
        - name: status
          required: false
          in: query
          schema:
            enum:
              - pending
              - confirmed
              - processing
              - ready_to_ship
              - shipped
              - out_for_delivery
              - delivered
              - completed
              - cancelled
              - refunded
              - returned
              - payment_failed
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-orders
      security:
        - bearer: []
  /api/v1/admin/orders/{id}/status:
    post:
      operationId: adminSet
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - checkout
      security:
        - bearer: []
    patch:
      operationId: updateStatus
      summary: Update order status
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-orders
      security:
        - bearer: []
  /api/v1/orders/create:
    post:
      operationId: createOrder
      summary: Create order from cart
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutConfirmDto'
      responses:
        '201':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/orders/recent:
    get:
      operationId: getRecentOrders
      summary: Get recent orders
      parameters:
        - name: limit
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/orders/{id}/track:
    get:
      operationId: trackOrder
      summary: Track order
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/orders/{id}/rate:
    post:
      operationId: rateOrder
      summary: Rate order
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateOrderDto'
      responses:
        '201':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/orders/stats/summary:
    get:
      operationId: getMyStatistics
      summary: Get user order statistics
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - orders
      security:
        - bearer: []
  /api/v1/admin/orders/{id}:
    get:
      operationId: getOrderDetails
      summary: Get order details (Admin)
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-orders
      security:
        - bearer: []
  /api/v1/admin/orders/{id}/ship:
    post:
      operationId: shipOrder
      summary: Ship order
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipOrderDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-orders
      security:
        - bearer: []
  /api/v1/admin/orders/{id}/refund:
    post:
      operationId: processRefund
      summary: Process refund
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundOrderDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-orders
      security:
        - bearer: []
  /api/v1/admin/orders/{id}/notes:
    post:
      operationId: addNotes
      summary: Add admin notes
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-orders
      security:
        - bearer: []
  /api/v1/admin/orders/analytics/summary:
    get:
      operationId: getAnalytics
      summary: Get admin analytics
      parameters:
        - name: days
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-orders
      security:
        - bearer: []
  /api/v1/cart:
    get:
      operationId: get
      summary: Get user cart
      description: Retrieves the current user shopping cart with all items
      parameters: []
      responses:
        '200':
          description: Cart retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 507f1f77bcf86cd799439011
                      userId:
                        type: string
                        example: 507f1f77bcf86cd799439012
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 507f1f77bcf86cd799439013
                            variantId:
                              type: string
                              example: 507f1f77bcf86cd799439014
                            quantity:
                              type: number
                              example: 2
                            product:
                              type: object
                            variant:
                              type: object
                      totalItems:
                        type: number
                        example: 3
                      totalPrice:
                        type: number
                        example: 599.98
                      currency:
                        type: string
                        example: USD
        '401':
          description: Invalid or missing JWT token
      tags:
        - cart
      security:
        - bearer: []
  /api/v1/cart/items:
    post:
      operationId: add
      summary: Add item to cart
      description: Adds a product variant to the user shopping cart
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddItemDto'
      responses:
        '200':
          description: Item added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 507f1f77bcf86cd799439013
                      variantId:
                        type: string
                        example: 507f1f77bcf86cd799439014
                      quantity:
                        type: number
                        example: 2
                      product:
                        type: object
                      variant:
                        type: object
        '400':
          description: Invalid variant ID or quantity
        '401':
          description: Invalid or missing JWT token
      tags:
        - cart
      security:
        - bearer: []
  /api/v1/cart/items/{itemId}:
    patch:
      operationId: update
      parameters:
        - name: itemId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItemDto'
      responses:
        '200':
          description: ''
      tags:
        - cart
      security:
        - bearer: []
    delete:
      operationId: remove
      parameters:
        - name: itemId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - cart
      security:
        - bearer: []
  /api/v1/cart/merge:
    post:
      operationId: merge
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDto'
      responses:
        '201':
          description: ''
      tags:
        - cart
      security:
        - bearer: []
  /api/v1/cart/preview:
    post:
      operationId: preview
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewDto'
      responses:
        '201':
          description: ''
      tags:
        - cart
      security:
        - bearer: []
  /api/v1/cart/guest:
    get:
      operationId: get
      parameters:
        - name: deviceId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - cart-guest
  /api/v1/cart/guest/items:
    post:
      operationId: add
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestAddItemDto'
      responses:
        '201':
          description: ''
      tags:
        - cart-guest
  /api/v1/cart/guest/items/{itemId}:
    patch:
      operationId: update
      parameters:
        - name: itemId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestUpdateItemDto'
      responses:
        '200':
          description: ''
      tags:
        - cart-guest
    delete:
      operationId: remove
      parameters:
        - name: itemId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDto'
      responses:
        '200':
          description: ''
      tags:
        - cart-guest
  /api/v1/cart/guest/clear:
    post:
      operationId: clear
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDto'
      responses:
        '201':
          description: ''
      tags:
        - cart-guest
  /api/v1/cart/guest/preview:
    post:
      operationId: preview
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestPreviewDto'
      responses:
        '201':
          description: ''
      tags:
        - cart-guest
  /api/v1/admin/carts/abandoned:
    get:
      operationId: getAbandonedCarts
      summary: Get abandoned carts
      parameters:
        - name: hours
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/send-reminders:
    post:
      operationId: sendReminders
      summary: Send abandonment reminders to all abandoned carts
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/{id}/send-reminder:
    post:
      operationId: sendSingleReminder
      summary: Send abandonment reminder for specific cart
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/analytics:
    get:
      operationId: getAnalytics
      summary: Get comprehensive cart analytics
      parameters:
        - name: period
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/statistics:
    get:
      operationId: getStatistics
      summary: Get cart statistics overview
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/conversion-rates:
    get:
      operationId: getConversionRates
      summary: Get cart conversion rates
      parameters:
        - name: period
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/all:
    get:
      operationId: getAllCarts
      summary: Get all carts with pagination and filters
      parameters:
        - name: page
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: status
          required: true
          in: query
          schema:
            type: string
        - name: userId
          required: true
          in: query
          schema:
            type: string
        - name: dateFrom
          required: true
          in: query
          schema:
            type: string
        - name: dateTo
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/{id}:
    get:
      operationId: getCartById
      summary: Get cart details by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/{id}/convert-to-order:
    post:
      operationId: convertToOrder
      summary: Manually convert cart to order
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/recovery-campaigns:
    get:
      operationId: getRecoveryCampaigns
      summary: Get cart recovery campaign analytics
      parameters:
        - name: period
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/customer-behavior:
    get:
      operationId: getCustomerBehavior
      summary: Get customer behavior analytics
      parameters:
        - name: period
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/revenue-impact:
    get:
      operationId: getRevenueImpact
      summary: Get revenue impact analysis
      parameters:
        - name: period
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/admin/carts/bulk-actions:
    post:
      operationId: performBulkActions
      summary: Perform bulk actions on carts
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - admin-carts
      security:
        - bearer: []
  /api/v1/addresses:
    get:
      operationId: list
      summary: Get all user addresses
      parameters:
        - name: includeDeleted
          required: false
          in: query
          description: Include soft-deleted addresses
          schema:
            type: boolean
      responses:
        '200':
          description: Addresses fetched successfully
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
    post:
      operationId: create
      summary: Create new address
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressDto'
      responses:
        '201':
          description: Address created successfully
        '400':
          description: Validation error
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
  /api/v1/addresses/active:
    get:
      operationId: getActive
      summary: Get active addresses only
      parameters: []
      responses:
        '200':
          description: Active addresses fetched successfully
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
  /api/v1/addresses/default:
    get:
      operationId: getDefault
      summary: Get default address
      parameters: []
      responses:
        '200':
          description: Default address fetched successfully (or null if none)
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
  /api/v1/addresses/{id}:
    get:
      operationId: getAddress
      summary: Get address by ID
      parameters:
        - name: id
          required: true
          in: path
          description: Address ID
          schema:
            type: string
      responses:
        '200':
          description: Address fetched successfully
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
    patch:
      operationId: update
      summary: Update address
      parameters:
        - name: id
          required: true
          in: path
          description: Address ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddressDto'
      responses:
        '200':
          description: Address updated successfully
        '400':
          description: Validation error
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
    delete:
      operationId: remove
      summary: Delete address (soft delete)
      parameters:
        - name: id
          required: true
          in: path
          description: Address ID
          schema:
            type: string
      responses:
        '200':
          description: Address deleted successfully
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
  /api/v1/addresses/{id}/set-default:
    post:
      operationId: setDefault
      summary: Set address as default
      parameters:
        - name: id
          required: true
          in: path
          description: Address ID
          schema:
            type: string
      responses:
        '200':
          description: Default address set successfully
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
  /api/v1/addresses/{id}/restore:
    post:
      operationId: restore
      summary: Restore deleted address
      parameters:
        - name: id
          required: true
          in: path
          description: Address ID
          schema:
            type: string
      responses:
        '200':
          description: Address restored successfully
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
  /api/v1/addresses/validate/{id}:
    get:
      operationId: validateOwnership
      summary: Validate address ownership
      parameters:
        - name: id
          required: true
          in: path
          description: Address ID
          schema:
            type: string
      responses:
        '200':
          description: Ownership validation result
        '401':
          description: Unauthorized
      tags:
        - addresses
      security:
        - bearer: []
  /api/v1/admin/marketing/price-rules:
    post:
      operationId: createPriceRule
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePriceRuleDto'
      responses:
        '201':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    get:
      operationId: listPriceRules
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/price-rules/{id}:
    get:
      operationId: getPriceRule
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    patch:
      operationId: updatePriceRule
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePriceRuleDto'
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    delete:
      operationId: deletePriceRule
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/price-rules/{id}/toggle:
    post:
      operationId: togglePriceRule
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/price-rules/preview:
    post:
      operationId: previewPriceRule
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewPriceRuleDto'
      responses:
        '201':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/coupons:
    post:
      operationId: createCoupon
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCouponDto'
      responses:
        '201':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    get:
      operationId: listCoupons
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/coupons/{id}:
    get:
      operationId: getCoupon
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    patch:
      operationId: updateCoupon
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCouponDto'
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    delete:
      operationId: deleteCoupon
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/coupons/validate:
    post:
      operationId: validateCoupon
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCouponDto'
      responses:
        '201':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/banners:
    post:
      operationId: createBanner
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBannerDto'
      responses:
        '201':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    get:
      operationId: listBanners
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/admin/marketing/banners/{id}:
    get:
      operationId: getBanner
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    patch:
      operationId: updateBanner
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBannerDto'
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
    delete:
      operationId: deleteBanner
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-admin
      security:
        - bearer: []
  /api/v1/marketing/pricing/variant:
    get:
      operationId: getVariantPrice
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - marketing-public
  /api/v1/marketing/coupons/validate:
    get:
      operationId: validateCoupon
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - marketing-public
  /api/v1/marketing/banners:
    get:
      operationId: getActiveBanners
      parameters:
        - name: location
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-public
  /api/v1/marketing/banners/{id}/view:
    get:
      operationId: trackBannerView
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-public
  /api/v1/marketing/banners/{id}/click:
    get:
      operationId: trackBannerClick
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - marketing-public
  /api/v1/support/tickets:
    post:
      operationId: createTicket
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSupportTicketDto'
      responses:
        '201':
          description: ''
      tags:
        - support-customer
      security:
        - bearer: []
    get:
      operationId: getMyTickets
      parameters:
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: page
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - support-customer
      security:
        - bearer: []
  /api/v1/support/tickets/{id}:
    get:
      operationId: getTicket
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - support-customer
      security:
        - bearer: []
  /api/v1/support/tickets/{id}/messages:
    get:
      operationId: getTicketMessages
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: page
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - support-customer
      security:
        - bearer: []
    post:
      operationId: addMessage
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSupportMessageDto'
      responses:
        '201':
          description: ''
      tags:
        - support-customer
      security:
        - bearer: []
  /api/v1/support/tickets/{id}/archive:
    put:
      operationId: archiveTicket
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - support-customer
      security:
        - bearer: []
  /api/v1/admin/support/tickets:
    get:
      operationId: getAllTickets
      parameters:
        - name: status
          required: false
          in: query
          schema:
            enum:
              - open
              - in_progress
              - waiting_for_user
              - resolved
              - closed
            type: string
        - name: priority
          required: false
          in: query
          schema:
            enum:
              - low
              - medium
              - high
              - urgent
            type: string
        - name: category
          required: false
          in: query
          schema:
            enum:
              - technical
              - billing
              - products
              - services
              - account
              - other
            type: string
        - name: assignedTo
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: page
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - support-admin
      security:
        - bearer: []
  /api/v1/admin/support/tickets/{id}:
    get:
      operationId: getTicket
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - support-admin
      security:
        - bearer: []
    put:
      operationId: updateTicket
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSupportTicketDto'
      responses:
        '200':
          description: ''
      tags:
        - support-admin
      security:
        - bearer: []
  /api/v1/admin/support/tickets/{id}/messages:
    get:
      operationId: getTicketMessages
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: page
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - support-admin
      security:
        - bearer: []
    post:
      operationId: addMessage
      parameters:
        - name: id
          required: true
          in: path
          description: Ticket ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSupportMessageDto'
      responses:
        '201':
          description: ''
      tags:
        - support-admin
      security:
        - bearer: []
  /api/v1/admin/support/stats:
    get:
      operationId: getStats
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - support-admin
      security:
        - bearer: []
  /api/v1/analytics/dashboard:
    get:
      operationId: getDashboard
      summary: Get dashboard data
      description: Retrieve comprehensive dashboard analytics data with charts and KPIs
      parameters:
        - name: period
          required: false
          in: query
          description: Time period for analytics
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: Start date (ISO format)
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: End date (ISO format)
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: Compare with previous period
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: Dashboard data retrieved successfully
          content:
            application/json:
              schema:
                type: object
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/overview:
    get:
      operationId: getOverview
      summary: Get overview metrics
      description: Retrieve key performance indicators and overview statistics
      parameters:
        - name: period
          required: false
          in: query
          description: نوع الفترة الزمنية
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: تاريخ البداية
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: تاريخ النهاية
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: مقارنة مع الفترة السابقة
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: Overview metrics retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/revenue:
    get:
      operationId: getRevenueAnalytics
      summary: Get revenue analytics
      description: Detailed revenue analysis with trends and breakdowns
      parameters:
        - name: period
          required: false
          in: query
          description: نوع الفترة الزمنية
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: تاريخ البداية
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: تاريخ النهاية
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: مقارنة مع الفترة السابقة
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: Revenue analytics retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/users:
    get:
      operationId: getUserAnalytics
      summary: Get user analytics
      description: User registration trends, demographics, and engagement metrics
      parameters:
        - name: period
          required: false
          in: query
          description: نوع الفترة الزمنية
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: تاريخ البداية
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: تاريخ النهاية
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: مقارنة مع الفترة السابقة
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: User analytics retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/products:
    get:
      operationId: getProductAnalytics
      summary: Get product analytics
      description: Product performance, sales trends, and inventory analytics
      parameters:
        - name: period
          required: false
          in: query
          description: نوع الفترة الزمنية
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: تاريخ البداية
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: تاريخ النهاية
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: مقارنة مع الفترة السابقة
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: Product analytics retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/services:
    get:
      operationId: getServiceAnalytics
      summary: Get service analytics
      description: Service request trends, engineer performance, and completion metrics
      parameters:
        - name: period
          required: false
          in: query
          description: نوع الفترة الزمنية
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: تاريخ البداية
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: تاريخ النهاية
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: مقارنة مع الفترة السابقة
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: Service analytics retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/support:
    get:
      operationId: getSupportAnalytics
      summary: Get support analytics
      description: Support ticket trends, resolution times, and customer satisfaction
      parameters:
        - name: period
          required: false
          in: query
          description: نوع الفترة الزمنية
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: تاريخ البداية
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: تاريخ النهاية
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: مقارنة مع الفترة السابقة
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: Support analytics retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/performance:
    get:
      operationId: getPerformanceMetrics
      summary: Get system performance metrics
      description: API response times, error rates, uptime, and system health
      parameters: []
      responses:
        '200':
          description: Performance metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetricsDto'
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/reports/generate:
    post:
      operationId: generateReport
      summary: Generate custom report
      description: Generate a custom analytics report in specified formats
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportGenerationDto'
      responses:
        '201':
          description: Report generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsReportDto'
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/reports/{id}:
    get:
      operationId: getReport
      summary: Get report by ID
      description: Retrieve a previously generated report
      parameters:
        - name: id
          required: true
          in: path
          description: Report ID
          schema:
            type: string
      responses:
        '200':
          description: Report retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsReportDto'
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/reports/schedule:
    post:
      operationId: scheduleReport
      summary: Schedule automated report
      description: Create a scheduled report that runs automatically
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportScheduleDto'
      responses:
        '201':
          description: Report schedule created successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/kpis:
    get:
      operationId: getKPIs
      summary: Get KPI metrics
      description: Retrieve key performance indicators
      parameters:
        - name: period
          required: false
          in: query
          description: نوع الفترة الزمنية
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: startDate
          required: false
          in: query
          description: تاريخ البداية
          schema:
            example: '2023-01-01'
            type: string
        - name: endDate
          required: false
          in: query
          description: تاريخ النهاية
          schema:
            example: '2023-12-31'
            type: string
        - name: compareWithPrevious
          required: false
          in: query
          description: مقارنة مع الفترة السابقة
          schema:
            example: true
            type: boolean
      responses:
        '200':
          description: KPIs retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/trends/{metric}:
    get:
      operationId: getMetricTrends
      summary: Get metric trends
      description: Retrieve trend data for specific metrics over time
      parameters:
        - name: metric
          required: true
          in: path
          description: Metric name (revenue, users, orders, etc.)
          schema:
            type: string
        - name: period
          required: false
          in: query
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
        - name: days
          required: false
          in: query
          description: Number of days to look back
          schema:
            type: number
      responses:
        '200':
          description: Metric trends retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/comparison:
    get:
      operationId: comparePeriods
      summary: Compare periods
      description: Compare analytics between two different periods
      parameters:
        - name: currentStart
          required: true
          in: query
          description: Current period start date
          schema:
            type: string
        - name: currentEnd
          required: true
          in: query
          description: Current period end date
          schema:
            type: string
        - name: previousStart
          required: true
          in: query
          description: Previous period start date
          schema:
            type: string
        - name: previousEnd
          required: true
          in: query
          description: Previous period end date
          schema:
            type: string
      responses:
        '200':
          description: Period comparison retrieved successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/export/{format}:
    get:
      operationId: exportData
      summary: Export analytics data
      description: Export analytics data in various formats
      parameters:
        - name: format
          required: true
          in: path
          description: Export format
          schema:
            enum:
              - csv
              - json
              - xlsx
            type: string
        - name: type
          required: true
          in: query
          description: Data type to export (users, orders, revenue, etc.)
          schema:
            type: string
        - name: period
          required: false
          in: query
          schema:
            enum:
              - daily
              - weekly
              - monthly
              - quarterly
              - yearly
            type: string
      responses:
        '200':
          description: Export file URL returned
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/refresh:
    post:
      operationId: refreshAnalytics
      summary: Refresh analytics data
      description: Force refresh of analytics snapshots and calculations
      parameters: []
      responses:
        '200':
          description: Analytics data refreshed successfully
      tags:
        - analytics
      security:
        - bearer: []
  /api/v1/analytics/advanced/sales:
    get:
      operationId: getSalesAnalytics
      summary: Get sales analytics
      parameters:
        - name: endDate
          required: false
          in: query
          schema: {}
        - name: startDate
          required: false
          in: query
          schema: {}
        - name: period
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Sales analytics retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/products/performance:
    get:
      operationId: getProductPerformance
      summary: Get product performance analytics
      parameters:
        - name: endDate
          required: false
          in: query
          schema: {}
        - name: startDate
          required: false
          in: query
          schema: {}
        - name: period
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Product performance retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/customers:
    get:
      operationId: getCustomerAnalytics
      summary: Get customer analytics
      parameters:
        - name: endDate
          required: false
          in: query
          schema: {}
        - name: startDate
          required: false
          in: query
          schema: {}
        - name: period
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Customer analytics retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/inventory:
    get:
      operationId: getInventoryReport
      summary: Get inventory report
      parameters:
        - name: endDate
          required: false
          in: query
          schema: {}
        - name: startDate
          required: false
          in: query
          schema: {}
        - name: period
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Inventory report retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/financial:
    get:
      operationId: getFinancialReport
      summary: Get financial report
      parameters:
        - name: endDate
          required: false
          in: query
          schema: {}
        - name: startDate
          required: false
          in: query
          schema: {}
        - name: period
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Financial report retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/cart-analytics:
    get:
      operationId: getCartAnalytics
      summary: Get cart analytics
      parameters:
        - name: endDate
          required: false
          in: query
          schema: {}
        - name: startDate
          required: false
          in: query
          schema: {}
        - name: period
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Cart analytics retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/marketing:
    get:
      operationId: getMarketingReport
      summary: Get marketing report
      parameters:
        - name: endDate
          required: false
          in: query
          schema: {}
        - name: startDate
          required: false
          in: query
          schema: {}
        - name: period
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Marketing report retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/realtime:
    get:
      operationId: getRealTimeMetrics
      summary: Get real-time metrics
      parameters: []
      responses:
        '200':
          description: Real-time metrics retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/quick-stats:
    get:
      operationId: getQuickStats
      summary: Get quick stats
      parameters: []
      responses:
        '200':
          description: Quick stats retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/reports/generate:
    post:
      operationId: generateAdvancedReport
      summary: Generate advanced report
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Report generated successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/reports:
    get:
      operationId: listAdvancedReports
      summary: List advanced reports
      parameters:
        - name: status
          required: false
          in: query
          schema: {}
        - name: limit
          required: false
          in: query
          schema: {}
        - name: page
          required: false
          in: query
          schema: {}
      responses:
        '200':
          description: Reports retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/reports/{reportId}:
    get:
      operationId: getAdvancedReport
      summary: Get advanced report by ID
      parameters:
        - name: reportId
          required: true
          in: path
          description: Report ID
          schema:
            type: string
      responses:
        '200':
          description: Report retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
    delete:
      operationId: deleteReport
      summary: Delete report
      parameters:
        - name: reportId
          required: true
          in: path
          description: Report ID
          schema:
            type: string
      responses:
        '200':
          description: Report deleted successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/reports/{reportId}/archive:
    post:
      operationId: archiveReport
      summary: Archive report
      parameters:
        - name: reportId
          required: true
          in: path
          description: Report ID
          schema:
            type: string
      responses:
        '200':
          description: Report archived successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/reports/{reportId}/export:
    post:
      operationId: exportReport
      summary: Export report
      parameters:
        - name: reportId
          required: true
          in: path
          description: Report ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Report exported successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/export/sales:
    get:
      operationId: exportSalesData
      summary: Export sales data
      parameters:
        - name: format
          required: true
          in: query
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Sales data exported successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/export/products:
    get:
      operationId: exportProductsData
      summary: Export products data
      parameters:
        - name: format
          required: true
          in: query
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Products data exported successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/export/customers:
    get:
      operationId: exportCustomersData
      summary: Export customers data
      parameters:
        - name: format
          required: true
          in: query
          schema:
            type: string
        - name: startDate
          required: false
          in: query
          schema:
            type: string
        - name: endDate
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Customers data exported successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/comparison:
    get:
      operationId: comparePeriodsAdvanced
      summary: Compare periods (advanced)
      parameters:
        - name: currentStart
          required: true
          in: query
          schema:
            type: string
        - name: currentEnd
          required: true
          in: query
          schema:
            type: string
        - name: previousStart
          required: true
          in: query
          schema:
            type: string
        - name: previousEnd
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Period comparison retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/analytics/advanced/trends/{metric}:
    get:
      operationId: getMetricTrendsAdvanced
      summary: Get metric trends (advanced)
      parameters:
        - name: metric
          required: true
          in: path
          description: Metric name
          schema:
            type: string
        - name: startDate
          required: true
          in: query
          schema:
            type: string
        - name: endDate
          required: true
          in: query
          schema:
            type: string
        - name: groupBy
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Metric trends retrieved successfully
      tags:
        - analytics/advanced
      security:
        - bearer: []
  /api/v1/services/requests:
    post:
      operationId: create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRequestDto'
      responses:
        '201':
          description: ''
      tags:
        - services-customer
      security:
        - bearer: []
  /api/v1/services/requests/my:
    get:
      operationId: my
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - services-customer
      security:
        - bearer: []
  /api/v1/services/requests/{id}:
    get:
      operationId: get
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-customer
      security:
        - bearer: []
  /api/v1/services/requests/{id}/cancel:
    post:
      operationId: cancel
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - services-customer
      security:
        - bearer: []
  /api/v1/services/requests/{id}/accept-offer:
    post:
      operationId: accept
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptOfferDto'
      responses:
        '201':
          description: ''
      tags:
        - services-customer
      security:
        - bearer: []
  /api/v1/services/requests/{id}/rate:
    post:
      operationId: rate
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateServiceDto'
      responses:
        '201':
          description: ''
      tags:
        - services-customer
      security:
        - bearer: []
  /api/v1/services/requests/{id}/offers:
    get:
      operationId: getOffers
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-customer
      security:
        - bearer: []
  /api/v1/services/requests/nearby:
    get:
      operationId: nearby
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - services-engineer
      security:
        - bearer: []
  /api/v1/services/offers:
    post:
      operationId: offer
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOfferDto'
      responses:
        '201':
          description: ''
      tags:
        - services-engineer
      security:
        - bearer: []
  /api/v1/services/offers/{id}:
    patch:
      operationId: updateOffer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferDto'
      responses:
        '200':
          description: ''
      tags:
        - services-engineer
      security:
        - bearer: []
  /api/v1/services/requests/{id}/start:
    post:
      operationId: start
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - services-engineer
      security:
        - bearer: []
  /api/v1/services/requests/{id}/complete:
    post:
      operationId: complete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - services-engineer
      security:
        - bearer: []
  /api/v1/services/offers/my:
    get:
      operationId: myOffers
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - services-engineer
      security:
        - bearer: []
  /api/v1/admin/services/requests:
    get:
      operationId: list
      parameters:
        - name: status
          required: true
          in: query
          schema:
            type: string
        - name: type
          required: true
          in: query
          schema:
            type: string
        - name: engineerId
          required: true
          in: query
          schema:
            type: string
        - name: userId
          required: true
          in: query
          schema:
            type: string
        - name: dateFrom
          required: true
          in: query
          schema:
            type: string
        - name: dateTo
          required: true
          in: query
          schema:
            type: string
        - name: search
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/requests/{id}:
    get:
      operationId: getRequest
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/requests/{id}/offers:
    get:
      operationId: getRequestOffers
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/requests/{id}/status:
    patch:
      operationId: updateRequestStatus
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/requests/{id}/cancel:
    post:
      operationId: cancel
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/requests/{id}/assign-engineer:
    post:
      operationId: assignEngineer
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/statistics/overview:
    get:
      operationId: getOverviewStats
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/statistics/requests:
    get:
      operationId: getRequestsStats
      parameters:
        - name: dateFrom
          required: true
          in: query
          schema:
            type: string
        - name: dateTo
          required: true
          in: query
          schema:
            type: string
        - name: groupBy
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/statistics/engineers:
    get:
      operationId: getEngineersStats
      parameters:
        - name: dateFrom
          required: true
          in: query
          schema:
            type: string
        - name: dateTo
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/statistics/services-types:
    get:
      operationId: getServiceTypesStats
      parameters:
        - name: dateFrom
          required: true
          in: query
          schema:
            type: string
        - name: dateTo
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/statistics/revenue:
    get:
      operationId: getRevenueStats
      parameters:
        - name: dateFrom
          required: true
          in: query
          schema:
            type: string
        - name: dateTo
          required: true
          in: query
          schema:
            type: string
        - name: groupBy
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/engineers:
    get:
      operationId: getEngineersList
      parameters:
        - name: search
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/engineers/{id}/statistics:
    get:
      operationId: getEngineerStats
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/engineers/{id}/offers:
    get:
      operationId: getEngineerOffers
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: status
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/admin/services/offers:
    get:
      operationId: getOffersList
      parameters:
        - name: status
          required: true
          in: query
          schema:
            type: string
        - name: requestId
          required: true
          in: query
          schema:
            type: string
        - name: engineerId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - services-admin
      security:
        - bearer: []
  /api/v1/products/detail:
    get:
      operationId: productDetail
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: currency
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - catalog-public
  /api/v1/admin/catalog/products:
    post:
      operationId: createProduct
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDto'
      responses:
        '201':
          description: ''
      tags:
        - catalog-admin
      security:
        - bearer: []
  /api/v1/admin/catalog/products/{id}:
    patch:
      operationId: updateProduct
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
      responses:
        '200':
          description: ''
      tags:
        - catalog-admin
      security:
        - bearer: []
  /api/v1/admin/catalog/variants:
    post:
      operationId: addVariant
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddVariantDto'
      responses:
        '201':
          description: ''
      tags:
        - catalog-admin
      security:
        - bearer: []
  /api/v1/admin/catalog/variants/{id}:
    patch:
      operationId: updateVariant
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVariantDto'
      responses:
        '200':
          description: ''
      tags:
        - catalog-admin
      security:
        - bearer: []
  /api/v1/admin/catalog/variant-prices:
    post:
      operationId: setPrice
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetVariantPriceDto'
      responses:
        '201':
          description: ''
      tags:
        - catalog-admin
      security:
        - bearer: []
  /api/v1/exchange-rates:
    post:
      operationId: createExchangeRate
      summary: Create new exchange rate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExchangeRateDto'
      responses:
        '201':
          description: Exchange rate created successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
    get:
      operationId: getAllExchangeRates
      summary: Get all exchange rates
      parameters: []
      responses:
        '200':
          description: Exchange rates retrieved successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
  /api/v1/exchange-rates/{fromCurrency}/{toCurrency}:
    put:
      operationId: updateExchangeRate
      summary: Update exchange rate
      parameters:
        - name: fromCurrency
          required: true
          in: path
          schema:
            type: string
        - name: toCurrency
          required: true
          in: path
          schema:
            type: string
        - name: reason
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExchangeRateDto'
      responses:
        '200':
          description: Exchange rate updated successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
    get:
      operationId: getExchangeRate
      summary: Get exchange rate
      parameters:
        - name: fromCurrency
          required: true
          in: path
          schema:
            type: string
        - name: toCurrency
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Exchange rate retrieved successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
    delete:
      operationId: deactivateExchangeRate
      summary: Deactivate exchange rate
      parameters:
        - name: fromCurrency
          required: true
          in: path
          schema:
            type: string
        - name: toCurrency
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Exchange rate deactivated successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
  /api/v1/exchange-rates/convert:
    post:
      operationId: convertCurrency
      summary: Convert currency
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConvertCurrencyDto'
      responses:
        '200':
          description: Currency converted successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
  /api/v1/exchange-rates/bulk-update:
    post:
      operationId: bulkUpdateExchangeRates
      summary: Bulk update exchange rates
      parameters:
        - name: reason
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateExchangeRatesDto'
      responses:
        '200':
          description: Exchange rates updated successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
  /api/v1/exchange-rates/history:
    get:
      operationId: getExchangeRateHistory
      summary: Get exchange rate history
      parameters: []
      responses:
        '200':
          description: Exchange rate history retrieved successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
  /api/v1/exchange-rates/statistics:
    get:
      operationId: getExchangeRateStatistics
      summary: Get exchange rate statistics
      parameters: []
      responses:
        '200':
          description: Exchange rate statistics retrieved successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
  /api/v1/exchange-rates/currencies/supported:
    get:
      operationId: getSupportedCurrencies
      summary: Get supported currencies
      parameters: []
      responses:
        '200':
          description: Supported currencies retrieved successfully
      tags:
        - exchange-rates
      security:
        - bearer: []
  /api/v1/admin/exchange-rates/dashboard:
    get:
      operationId: getDashboardData
      summary: Get exchange rates dashboard data
      parameters: []
      responses:
        '200':
          description: Dashboard data retrieved successfully
      tags:
        - admin-exchange-rates
      security:
        - bearer: []
  /api/v1/admin/exchange-rates/import:
    post:
      operationId: importExchangeRates
      summary: Import exchange rates from CSV/JSON
      parameters: []
      responses:
        '201':
          description: Exchange rates imported successfully
      tags:
        - admin-exchange-rates
      security:
        - bearer: []
  /api/v1/admin/exchange-rates/export:
    post:
      operationId: exportExchangeRates
      summary: Export exchange rates to CSV/JSON
      parameters:
        - name: format
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Exchange rates exported successfully
      tags:
        - admin-exchange-rates
      security:
        - bearer: []
  /api/v1/admin/exchange-rates/analytics:
    get:
      operationId: getAnalytics
      summary: Get exchange rates analytics
      parameters: []
      responses:
        '200':
          description: Analytics retrieved successfully
      tags:
        - admin-exchange-rates
      security:
        - bearer: []
  /api/v1/admin/exchange-rates/backup:
    post:
      operationId: createBackup
      summary: Create backup of exchange rates
      parameters: []
      responses:
        '200':
          description: Backup created successfully
      tags:
        - admin-exchange-rates
      security:
        - bearer: []
  /api/v1/admin/exchange-rates/restore:
    post:
      operationId: restoreFromBackup
      summary: Restore exchange rates from backup
      parameters: []
      responses:
        '200':
          description: Exchange rates restored successfully
      tags:
        - admin-exchange-rates
      security:
        - bearer: []
  /api/v1/admin/exchange-rates/health:
    get:
      operationId: healthCheck
      summary: Check exchange rates system health
      parameters: []
      responses:
        '200':
          description: Health check completed
      tags:
        - admin-exchange-rates
      security:
        - bearer: []
  /api/v1/search:
    get:
      operationId: universalSearch
      summary: بحث شامل في المنتجات، الفئات، والبراندات
      parameters:
        - name: q
          required: false
          in: query
          description: نص البحث
          schema:
            type: string
        - name: lang
          required: false
          in: query
          description: اللغة
          schema:
            enum:
              - ar
              - en
            type: string
        - name: entity
          required: false
          in: query
          description: نوع الكيانات
          schema:
            enum:
              - products
              - categories
              - brands
              - all
            type: string
        - name: page
          required: false
          in: query
          description: رقم الصفحة
          schema:
            minimum: 1
            type: number
        - name: limit
          required: false
          in: query
          description: عدد النتائج
          schema:
            minimum: 1
            maximum: 100
            type: number
      responses:
        '200':
          description: ''
      tags:
        - search
  /api/v1/search/products:
    get:
      operationId: advancedProductSearch
      summary: بحث متقدم في المنتجات مع filters
      parameters:
        - name: q
          required: false
          in: query
          description: نص البحث
          schema:
            type: string
        - name: lang
          required: false
          in: query
          description: اللغة
          schema:
            enum:
              - ar
              - en
            type: string
        - name: categoryId
          required: false
          in: query
          description: معرف الفئة
          schema:
            type: string
        - name: brandId
          required: false
          in: query
          description: معرف البراند
          schema:
            type: string
        - name: status
          required: false
          in: query
          description: الحالة
          schema:
            enum:
              - draft
              - active
              - out_of_stock
              - discontinued
            type: string
        - name: isFeatured
          required: false
          in: query
          description: منتجات مميزة
          schema:
            type: boolean
        - name: isNew
          required: false
          in: query
          description: منتجات جديدة
          schema:
            type: boolean
        - name: minPrice
          required: false
          in: query
          description: السعر الأدنى
          schema:
            minimum: 0
            type: number
        - name: maxPrice
          required: false
          in: query
          description: السعر الأعلى
          schema:
            minimum: 0
            type: number
        - name: minRating
          required: false
          in: query
          description: التقييم الأدنى
          schema:
            minimum: 0
            maximum: 5
            type: number
        - name: attributes
          required: false
          in: query
          description: JSON string
          schema:
            example: '{"color": "red", "size": "large"}'
            type: string
        - name: tags
          required: false
          in: query
          description: الوسوم
          schema:
            type: array
            items:
              type: string
        - name: sortBy
          required: false
          in: query
          description: ترتيب حسب
          schema:
            enum:
              - name
              - price
              - rating
              - views
              - createdAt
              - relevance
            type: string
        - name: sortOrder
          required: false
          in: query
          description: اتجاه الترتيب
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: page
          required: false
          in: query
          description: رقم الصفحة
          schema:
            minimum: 1
            type: number
        - name: limit
          required: false
          in: query
          description: عدد النتائج
          schema:
            minimum: 1
            maximum: 100
            type: number
        - name: includeFacets
          required: false
          in: query
          description: إرجاع الـ Facets
          schema:
            type: boolean
      responses:
        '200':
          description: ''
      tags:
        - search
  /api/v1/search/suggestions:
    get:
      operationId: getSuggestions
      summary: اقتراحات البحث (Autocomplete)
      parameters:
        - name: q
          required: true
          in: query
          description: نص البحث
          schema:
            type: string
        - name: lang
          required: false
          in: query
          schema:
            enum:
              - ar
              - en
            type: string
        - name: limit
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags:
        - search
  /api/v1/search/autocomplete:
    get:
      operationId: autocomplete
      summary: Autocomplete
      parameters:
        - name: q
          required: true
          in: query
          schema:
            type: string
        - name: lang
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - search
  /api/v1/admin/brands:
    post:
      operationId: createBrand
      summary: Create a new brand
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBrandDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-brands
      security:
        - bearer: []
    get:
      operationId: listBrands
      summary: List all brands with filters and pagination
      parameters:
        - name: page
          required: false
          in: query
          schema:
            example: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            example: 20
            type: number
        - name: search
          required: false
          in: query
          schema:
            example: Apple
            type: string
        - name: isActive
          required: false
          in: query
          schema:
            example: true
            type: boolean
        - name: sortBy
          required: false
          in: query
          schema:
            example: name
            enum:
              - name
              - createdAt
              - sortOrder
            type: string
        - name: sortOrder
          required: false
          in: query
          schema:
            example: asc
            enum:
              - asc
              - desc
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-brands
      security:
        - bearer: []
  /api/v1/admin/brands/{id}:
    get:
      operationId: getBrand
      summary: Get brand by ID
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-brands
      security:
        - bearer: []
    patch:
      operationId: updateBrand
      summary: Update brand
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrandDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-brands
      security:
        - bearer: []
    delete:
      operationId: deleteBrand
      summary: Delete brand
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-brands
      security:
        - bearer: []
  /api/v1/admin/brands/{id}/toggle-status:
    patch:
      operationId: toggleBrandStatus
      summary: Toggle brand active status
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-brands
      security:
        - bearer: []
  /api/v1/brands:
    get:
      operationId: getActiveBrands
      summary: Get all active brands (Public endpoint - no auth required)
      parameters:
        - name: page
          required: false
          in: query
          schema:
            example: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            example: 20
            type: number
        - name: search
          required: false
          in: query
          schema:
            example: Apple
            type: string
        - name: isActive
          required: false
          in: query
          schema:
            example: true
            type: boolean
        - name: sortBy
          required: false
          in: query
          schema:
            example: name
            enum:
              - name
              - createdAt
              - sortOrder
            type: string
        - name: sortOrder
          required: false
          in: query
          schema:
            example: asc
            enum:
              - asc
              - desc
            type: string
      responses:
        '200':
          description: ''
      tags:
        - brands
  /api/v1/brands/slug/{slug}:
    get:
      operationId: getBrandBySlug
      summary: Get brand by slug (Public endpoint)
      parameters:
        - name: slug
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - brands
  /api/v1/brands/{id}:
    get:
      operationId: getBrandById
      summary: Get brand by ID (Public endpoint)
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - brands
  /api/v1/upload/file:
    post:
      operationId: uploadFile
      parameters:
        - name: folder
          required: true
          in: query
          schema:
            type: string
        - name: filename
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: File upload
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFileDto'
      responses:
        '201':
          description: ''
      tags:
        - upload
      security:
        - bearer: []
    delete:
      operationId: deleteFile
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFileDto'
      responses:
        '200':
          description: ''
      tags:
        - upload
      security:
        - bearer: []
  /api/v1/upload/files:
    post:
      operationId: uploadFiles
      parameters:
        - name: folder
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        description: Multiple files upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                folder:
                  type: string
                  description: Upload folder
      responses:
        '201':
          description: ''
      tags:
        - upload
      security:
        - bearer: []
  /api/v1/upload/file/{filePath}:
    get:
      operationId: getFileInfo
      parameters:
        - name: filePath
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - upload
      security:
        - bearer: []
  /api/v1/upload/public/*:
    get:
      operationId: serveFile
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - upload
      security:
        - bearer: []
  /api/v1/admin/media/upload:
    post:
      operationId: uploadMedia
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadMediaDto'
      responses:
        '201':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
  /api/v1/admin/media:
    get:
      operationId: listMedia
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
  /api/v1/admin/media/{id}:
    get:
      operationId: getMedia
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
    patch:
      operationId: updateMedia
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMediaDto'
      responses:
        '200':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
    delete:
      operationId: deleteMedia
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
  /api/v1/admin/media/{id}/restore:
    post:
      operationId: restoreMedia
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
  /api/v1/admin/media/{id}/permanent:
    delete:
      operationId: permanentDeleteMedia
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
  /api/v1/admin/media/stats/summary:
    get:
      operationId: getStats
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - admin-media
      security:
        - bearer: []
  /api/v1/health:
    get:
      operationId: check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
  /api/v1/health/simple:
    get:
      operationId: simple
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/health/ready:
    get:
      operationId: ready
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
  /api/v1/health/live:
    get:
      operationId: live
      parameters: []
      responses:
        '200':
          description: ''
info:
  title: Tagadod API
  description: Complete e-commerce platform for solar products with advanced analytics and multi-language support
  version: '1.0'
  contact: {}
tags:
  - name: auth
    description: Authentication and authorization endpoints
  - name: users
    description: User management and profiles
  - name: products
    description: Product catalog and management
  - name: categories
    description: Product categories and organization
  - name: brands
    description: Brand management
  - name: attributes
    description: Product attributes and specifications
  - name: cart
    description: Shopping cart operations
  - name: checkout
    description: Order processing and checkout
  - name: orders
    description: Order management and tracking
  - name: analytics
    description: Analytics and reporting
  - name: marketing
    description: Marketing campaigns and promotions
  - name: notifications
    description: Notification system
  - name: support
    description: Customer support and tickets
  - name: services
    description: Service requests and management
  - name: favorites
    description: User favorites and wishlist
  - name: addresses
    description: Address management
  - name: exchange-rates
    description: Currency conversion and exchange rates
  - name: search
    description: Product search and filtering
  - name: upload
    description: File upload and media management
servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.tagadod.com
    description: Production server
components:
  securitySchemes:
    JWT-auth:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT token
      in: header
  schemas:
    SendOtpDto:
      type: object
      properties: {}
    VerifyOtpDto:
      type: object
      properties: {}
    SetPasswordDto:
      type: object
      properties: {}
    UpdatePreferredCurrencyDto:
      type: object
      properties: {}
    ForgotPasswordDto:
      type: object
      properties: {}
    ResetPasswordDto:
      type: object
      properties: {}
    AddFavoriteDto:
      type: object
      properties: {}
    RemoveFavoriteDto:
      type: object
      properties: {}
    UpdateFavoriteDto:
      type: object
      properties: {}
    SyncFavoritesDto:
      type: object
      properties: {}
    GuestAddFavoriteDto:
      type: object
      properties: {}
    GuestRemoveFavoriteDto:
      type: object
      properties: {}
    CreateProductDto:
      type: object
      properties: {}
    UpdateProductDto:
      type: object
      properties: {}
    CreateVariantDto:
      type: object
      properties: {}
    UpdateVariantDto:
      type: object
      properties: {}
    GenerateVariantsDto:
      type: object
      properties: {}
    CreateAttributeDto:
      type: object
      properties: {}
    UpdateAttributeDto:
      type: object
      properties: {}
    CreateAttributeValueDto:
      type: object
      properties: {}
    UpdateAttributeValueDto:
      type: object
      properties: {}
    CreateCategoryDto:
      type: object
      properties: {}
    UpdateCategoryDto:
      type: object
      properties: {}
    SendNotificationDto:
      type: object
      properties: {}
    NotificationTemplateDto:
      type: object
      properties: {}
    AdminCreateNotificationDto:
      type: object
      properties: {}
    AdminUpdateNotificationDto:
      type: object
      properties: {}
    AdminSendNotificationDto:
      type: object
      properties: {}
    AdminTestDto:
      type: object
      properties: {}
    UserInfoDto:
      type: object
      properties:
        phone:
          type: string
          description: رقم الهاتف
        firstName:
          type: string
          description: الاسم الأول
        lastName:
          type: string
          description: الاسم الأخير
        status:
          type: string
          description: حالة الحساب
        roles:
          description: أدوار المستخدم
          type: array
          items:
            type: string
        createdAt:
          format: date-time
          type: string
          description: تاريخ إنشاء الحساب
        lastLogin:
          format: date-time
          type: string
          description: آخر تسجيل دخول
      required:
        - phone
        - status
        - roles
        - createdAt
    OrderStatsDto:
      type: object
      properties:
        total:
          type: number
          description: إجمالي الطلبات
        completed:
          type: number
          description: الطلبات المكتملة
        pending:
          type: number
          description: الطلبات المعلقة
        cancelled:
          type: number
          description: الطلبات الملغية
        totalSpent:
          type: number
          description: إجمالي المبلغ المنفق
        averageOrderValue:
          type: number
          description: متوسط قيمة الطلب
        firstOrderDate:
          format: date-time
          type: string
          description: تاريخ أول طلب
        lastOrderDate:
          format: date-time
          type: string
          description: تاريخ آخر طلب
        favoriteCategories:
          description: الفئات المفضلة
          type: array
          items:
            type: string
      required:
        - total
        - completed
        - pending
        - cancelled
        - totalSpent
        - averageOrderValue
        - favoriteCategories
    FavoriteStatsDto:
      type: object
      properties:
        total:
          type: number
          description: إجمالي المفضلة
        categories:
          description: الفئات في المفضلة
          type: array
          items:
            type: string
        recentFavorites:
          description: آخر المفضلة المضافة
          type: array
          items:
            type: string
      required:
        - total
        - categories
        - recentFavorites
    SupportStatsDto:
      type: object
      properties:
        totalTickets:
          type: number
          description: إجمالي تذاكر الدعم
        openTickets:
          type: number
          description: التذاكر المفتوحة
        resolvedTickets:
          type: number
          description: التذاكر المحلولة
        averageResponseTime:
          type: number
          description: متوسط وقت الاستجابة (بالدقائق)
      required:
        - totalTickets
        - openTickets
        - resolvedTickets
    UserScoreDto:
      type: object
      properties:
        loyaltyScore:
          type: number
          description: نقاط الولاء (0-100)
        valueScore:
          type: number
          description: نقاط القيمة المالية (0-100)
        activityScore:
          type: number
          description: نقاط النشاط (0-100)
        supportScore:
          type: number
          description: نقاط خدمة العملاء (0-100)
        overallScore:
          type: number
          description: النقاط الإجمالية (0-100)
        rank:
          type: number
          description: الترتيب بين العملاء
      required:
        - loyaltyScore
        - valueScore
        - activityScore
        - supportScore
        - overallScore
        - rank
    UserBehaviorDto:
      type: object
      properties:
        preferredPaymentMethod:
          type: string
          description: طريقة الدفع المفضلة
        averageOrderFrequency:
          type: number
          description: متوسط تكرار الطلبات (بالأيام)
        seasonalPatterns:
          description: الأنماط الموسمية
          type: array
          items:
            type: string
        productPreferences:
          description: تفضيلات المنتجات
          type: array
          items:
            type: string
      required:
        - preferredPaymentMethod
        - averageOrderFrequency
        - seasonalPatterns
        - productPreferences
    UserPredictionsDto:
      type: object
      properties:
        churnRisk:
          type: string
          description: مخاطر فقدان العميل
          enum:
            - low
            - medium
            - high
        nextPurchaseProbability:
          type: number
          description: احتمالية الشراء القادم (0-1)
        estimatedLifetimeValue:
          type: number
          description: القيمة المتوقعة للعميل
        recommendedActions:
          description: التوصيات المقترحة
          type: array
          items:
            type: string
      required:
        - churnRisk
        - nextPurchaseProbability
        - estimatedLifetimeValue
        - recommendedActions
    UserDetailedStatsDto:
      type: object
      properties:
        userId:
          type: string
          description: معرف المستخدم
        userInfo:
          description: معلومات المستخدم الأساسية
          allOf:
            - $ref: '#/components/schemas/UserInfoDto'
        orders:
          description: إحصائيات الطلبات
          allOf:
            - $ref: '#/components/schemas/OrderStatsDto'
        favorites:
          description: إحصائيات المفضلة
          allOf:
            - $ref: '#/components/schemas/FavoriteStatsDto'
        support:
          description: إحصائيات الدعم
          allOf:
            - $ref: '#/components/schemas/SupportStatsDto'
        score:
          description: نقاط التقييم
          allOf:
            - $ref: '#/components/schemas/UserScoreDto'
        behavior:
          description: تحليل السلوك
          allOf:
            - $ref: '#/components/schemas/UserBehaviorDto'
        predictions:
          description: التنبؤات والتوصيات
          allOf:
            - $ref: '#/components/schemas/UserPredictionsDto'
      required:
        - userId
        - userInfo
        - orders
        - favorites
        - support
        - score
        - behavior
        - predictions
    CustomerRankingDto:
      type: object
      properties:
        userId:
          type: string
          description: معرف المستخدم
        userInfo:
          type: object
          description: معلومات المستخدم
        totalSpent:
          type: number
          description: إجمالي المبلغ المنفق
        totalOrders:
          type: number
          description: إجمالي الطلبات
        rank:
          type: number
          description: الترتيب
        score:
          type: number
          description: النقاط الإجمالية
      required:
        - userId
        - userInfo
        - totalSpent
        - totalOrders
        - rank
        - score
    OverallUserAnalyticsDto:
      type: object
      properties:
        totalUsers:
          type: number
          description: إجمالي المستخدمين
        activeUsers:
          type: number
          description: المستخدمين النشطين
        newUsersThisMonth:
          type: number
          description: المستخدمين الجدد هذا الشهر
        topSpenders:
          description: أعلى العملاء إنفاقاً
          type: array
          items:
            type: string
        userGrowth:
          description: نمو المستخدمين
          type: array
          items:
            type: string
        averageOrderValue:
          type: number
          description: متوسط قيمة الطلب
        customerLifetimeValue:
          type: number
          description: القيمة المتوقعة للعميل
      required:
        - totalUsers
        - activeUsers
        - newUsersThisMonth
        - topSpenders
        - userGrowth
        - averageOrderValue
        - customerLifetimeValue
    UserStatsFilterDto:
      type: object
      properties:
        minScore:
          type: number
          description: تصفية حسب النقاط الدنيا
        maxScore:
          type: number
          description: تصفية حسب النقاط العليا
        churnRisk:
          type: string
          description: تصفية حسب مخاطر فقدان العميل
          enum:
            - low
            - medium
            - high
        status:
          type: string
          description: تصفية حسب حالة الحساب
        roles:
          description: تصفية حسب الدور
          type: array
          items:
            type: string
    PaginatedUserStatsDto:
      type: object
      properties:
        data:
          description: بيانات المستخدمين
          type: array
          items:
            type: string
        meta:
          type: object
          description: معلومات الصفحة
      required:
        - data
        - meta
    CheckoutPreviewDto:
      type: object
      properties:
        currency:
          type: string
          example: YER
          enum:
            - YER
            - SAR
            - USD
        couponCode:
          type: string
      required:
        - currency
    CheckoutConfirmDto:
      type: object
      properties:
        deliveryAddressId:
          type: string
          example: 65abc123def456789
        currency:
          type: string
          example: YER
        paymentMethod:
          type: string
          example: COD
          enum:
            - COD
            - ONLINE
        paymentProvider:
          type: string
        shippingMethod:
          type: string
          example: standard
        customerNotes:
          type: string
        couponCode:
          type: string
      required:
        - deliveryAddressId
        - currency
        - paymentMethod
    WebhookDto:
      type: object
      properties:
        intentId:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - FAILED
        amount:
          type: string
        signature:
          type: string
      required:
        - intentId
        - status
        - amount
        - signature
    CancelOrderDto:
      type: object
      properties:
        reason:
          type: string
          example: تغيير رأيي في المنتج
      required:
        - reason
    RateOrderDto:
      type: object
      properties:
        rating:
          type: number
          example: 5
          minimum: 1
          maximum: 5
        review:
          type: string
      required:
        - rating
    UpdateOrderStatusDto:
      type: object
      properties:
        status:
          type: string
          enum:
            - pending
            - confirmed
            - processing
            - ready_to_ship
            - shipped
            - out_for_delivery
            - delivered
            - completed
            - cancelled
            - refunded
            - returned
            - payment_failed
        notes:
          type: string
      required:
        - status
    ShipOrderDto:
      type: object
      properties:
        shippingCompany:
          type: string
          example: DHL
        trackingNumber:
          type: string
          example: DHL123456789
        estimatedDeliveryDate:
          type: string
        notes:
          type: string
      required:
        - shippingCompany
        - trackingNumber
    RefundOrderDto:
      type: object
      properties:
        amount:
          type: number
          example: 50000
        reason:
          type: string
          example: عطل في المنتج
        items:
          type: array
          items:
            type: string
      required:
        - amount
        - reason
    AddItemDto:
      type: object
      properties:
        variantId:
          type: string
          example: 65abc123def456789
        qty:
          type: number
          example: 1
          default: 1
      required:
        - variantId
        - qty
    UpdateItemDto:
      type: object
      properties:
        qty:
          type: number
          example: 2
      required:
        - qty
    DeviceDto:
      type: object
      properties:
        deviceId:
          type: string
          example: device_unique_id_123
      required:
        - deviceId
    PreviewDto:
      type: object
      properties:
        currency:
          type: string
          example: YER
          enum:
            - YER
            - SAR
            - USD
        couponCode:
          type: string
      required:
        - currency
    GuestAddItemDto:
      type: object
      properties:
        variantId:
          type: string
          example: 65abc123def456789
        qty:
          type: number
          example: 1
          default: 1
        deviceId:
          type: string
          example: device_unique_id_123
        metadata:
          type: object
      required:
        - variantId
        - qty
        - deviceId
    GuestUpdateItemDto:
      type: object
      properties:
        qty:
          type: number
          example: 2
        deviceId:
          type: string
          example: device_unique_id_123
      required:
        - qty
        - deviceId
    GuestPreviewDto:
      type: object
      properties:
        currency:
          type: string
          example: YER
          enum:
            - YER
            - SAR
            - USD
        couponCode:
          type: string
        deviceId:
          type: string
          example: device_unique_id_123
      required:
        - currency
        - deviceId
    CoordsDto:
      type: object
      properties:
        lat:
          type: number
          example: 15.3694
        lng:
          type: number
          example: 44.191
      required:
        - lat
        - lng
    CreateAddressDto:
      type: object
      properties:
        label:
          type: string
          example: المنزل
          description: تسمية العنوان
        addressType:
          type: string
          enum:
            - home
            - work
            - other
          default: home
        recipientName:
          type: string
          example: أحمد محمد
          description: اسم المستلم
        recipientPhone:
          type: string
          example: '773123456'
          description: رقم هاتف المستلم
        line1:
          type: string
          example: شارع الستين، بجوار مطعم السلطان
        line2:
          type: string
          example: الدور الثالث، شقة 12
        city:
          type: string
          example: صنعاء
        region:
          type: string
          example: حي السبعين
        country:
          type: string
          default: Yemen
        postalCode:
          type: string
        coords:
          $ref: '#/components/schemas/CoordsDto'
        notes:
          type: string
          example: يرجى الاتصال عند الوصول
        isDefault:
          type: boolean
          default: false
        placeId:
          type: string
      required:
        - label
        - recipientName
        - recipientPhone
        - line1
        - city
    UpdateAddressDto:
      type: object
      properties:
        label:
          type: string
        addressType:
          type: string
          enum:
            - home
            - work
            - other
        recipientName:
          type: string
        recipientPhone:
          type: string
        line1:
          type: string
        line2:
          type: string
        city:
          type: string
        region:
          type: string
        country:
          type: string
        postalCode:
          type: string
        coords:
          $ref: '#/components/schemas/CoordsDto'
        notes:
          type: string
        isDefault:
          type: boolean
        isActive:
          type: boolean
        placeId:
          type: string
    CreatePriceRuleDto:
      type: object
      properties: {}
    UpdatePriceRuleDto:
      type: object
      properties: {}
    PreviewPriceRuleDto:
      type: object
      properties: {}
    CreateCouponDto:
      type: object
      properties: {}
    UpdateCouponDto:
      type: object
      properties: {}
    ValidateCouponDto:
      type: object
      properties: {}
    CreateBannerDto:
      type: object
      properties: {}
    UpdateBannerDto:
      type: object
      properties: {}
    CreateSupportTicketDto:
      type: object
      properties:
        title:
          type: string
          description: عنوان المشكلة
          example: مشكلة في لوحة الطاقة الشمسية
        description:
          type: string
          description: وصف تفصيلي للمشكلة
          example: اللوحة لا تعمل بشكل صحيح منذ يومين
        category:
          type: string
          description: تصنيف المشكلة
          enum:
            - technical
            - billing
            - products
            - services
            - account
            - other
          example: technical
        priority:
          type: string
          description: أولوية المشكلة
          enum:
            - low
            - medium
            - high
            - urgent
          example: medium
        attachments:
          description: روابط الملفات المرفوعة
          example:
            - https://cdn.bunny.net/uploads/image1.jpg
          type: array
          items:
            type: string
        metadata:
          type: object
          description: بيانات إضافية (مثل رقم الطلب أو رقم المنتج)
          example:
            orderId: '12345'
            productId: '67890'
      required:
        - title
        - description
    AddSupportMessageDto:
      type: object
      properties:
        content:
          type: string
          description: محتوى الرسالة
          example: شكراً لك على الإبلاغ عن المشكلة. سنعمل على حلها في أقرب وقت ممكن.
        attachments:
          description: روابط الملفات المرفوعة مع الرسالة
          example:
            - https://cdn.bunny.net/uploads/solution.pdf
          type: array
          items:
            type: string
        isInternal:
          type: boolean
          description: رسالة داخلية (للمشرفين فقط)
          example: false
        metadata:
          type: object
          description: بيانات إضافية
          example:
            action: escalated
      required:
        - content
    UpdateSupportTicketDto:
      type: object
      properties:
        status:
          type: string
          description: حالة التذكرة
          enum:
            - open
            - in_progress
            - waiting_for_user
            - resolved
            - closed
          example: in_progress
        priority:
          type: string
          description: أولوية التذكرة
          enum:
            - low
            - medium
            - high
            - urgent
          example: high
        category:
          type: string
          description: تصنيف التذكرة
          enum:
            - technical
            - billing
            - products
            - services
            - account
            - other
          example: technical
        assignedTo:
          type: string
          description: معرف المشرف المسؤول
          example: 507f1f77bcf86cd799439011
        resolvedAt:
          format: date-time
          type: string
          description: تاريخ الحل (يتم تعيينه تلقائياً عند تغيير الحالة إلى RESOLVED)
        closedAt:
          format: date-time
          type: string
          description: تاريخ الإغلاق (يتم تعيينه تلقائياً عند تغيير الحالة إلى CLOSED)
    PerformanceMetricsDto:
      type: object
      properties:
        apiResponseTime:
          type: number
          description: متوسط وقت استجابة API
          example: 245
        errorRate:
          type: number
          description: معدل الأخطاء
          example: 0.02
        uptime:
          type: number
          description: نسبة التشغيل
          example: 99.9
        concurrentUsers:
          type: number
          description: المستخدمون المتزامنون
          example: 1250
        memoryUsage:
          type: number
          description: ذاكرة النظام المستخدمة
          example: 75.5
        cpuUsage:
          type: number
          description: استخدام المعالج
          example: 45.2
        diskUsage:
          type: number
          description: مساحة القرص المستخدمة
          example: 68.3
        activeConnections:
          type: number
          description: عدد قواعد البيانات النشطة
          example: 5
        slowestEndpoints:
          description: أبطأ نقاط النهاية
          type: array
          items:
            type: string
        databaseStats:
          type: object
          description: إحصائيات قاعدة البيانات
      required:
        - apiResponseTime
        - errorRate
        - uptime
        - concurrentUsers
        - memoryUsage
        - cpuUsage
        - diskUsage
        - activeConnections
        - slowestEndpoints
        - databaseStats
    ReportGenerationDto:
      type: object
      properties:
        reportType:
          type: string
          description: نوع التقرير
          enum:
            - daily_summary
            - weekly_report
            - monthly_report
            - revenue_report
            - user_activity
            - product_performance
            - service_analytics
            - support_metrics
            - custom_report
          example: monthly_report
        formats:
          type: array
          description: تنسيقات التقرير
          example:
            - pdf
            - excel
          items:
            type: string
            enum:
              - pdf
              - excel
              - csv
              - json
              - html
        startDate:
          type: string
          description: تاريخ البداية
          example: '2023-01-01'
        endDate:
          type: string
          description: تاريخ النهاية
          example: '2023-12-31'
        filters:
          type: object
          description: فلاتر إضافية
          example:
            category: solar_panels
            status: active
        includeCharts:
          type: boolean
          description: تضمين الرسوم البيانية
          example: true
        includeRawData:
          type: boolean
          description: تضمين البيانات الأولية
          example: false
      required:
        - reportType
    DashboardDataDto:
      type: object
      properties:
        overview:
          type: object
          description: بيانات لوحة التحكم الرئيسية
        revenueCharts:
          type: object
          description: مخططات الإيرادات
        userCharts:
          type: object
          description: مخططات المستخدمين
        productCharts:
          type: object
          description: مخططات المنتجات
        serviceCharts:
          type: object
          description: مخططات الخدمات
        supportCharts:
          type: object
          description: مخططات الدعم
        kpis:
          type: object
          description: المؤشرات الرئيسية
      required:
        - overview
        - revenueCharts
        - userCharts
        - productCharts
        - serviceCharts
        - supportCharts
        - kpis
    AnalyticsReportDto:
      type: object
      properties:
        id:
          type: string
          description: معرف التقرير
          example: 507f1f77bcf86cd799439011
        type:
          type: string
          description: نوع التقرير
          enum:
            - daily_summary
            - weekly_report
            - monthly_report
            - revenue_report
            - user_activity
            - product_performance
            - service_analytics
            - support_metrics
            - custom_report
          example: monthly_report
        period:
          type: string
          description: فترة التقرير
          example: يناير 2024
        generatedAt:
          format: date-time
          type: string
          description: تاريخ إنشاء التقرير
          example: '2024-01-31T23:59:59Z'
        data:
          description: البيانات التحليلية
          allOf:
            - $ref: '#/components/schemas/DashboardDataDto'
        insights:
          description: التوصيات والملاحظات
          example:
            - الإيرادات زادت بنسبة 15%
            - تحتاج إلى تحسين خدمة العملاء
          type: array
          items:
            type: string
        fileUrls:
          description: روابط ملفات التقرير
          example:
            - https://cdn.example.com/reports/monthly-2024-01.pdf
          type: array
          items:
            type: string
      required:
        - id
        - type
        - period
        - generatedAt
        - data
    CreateReportScheduleDto:
      type: object
      properties:
        name:
          type: string
          description: اسم التقرير المجدول
          example: تقرير المبيعات الأسبوعي
        description:
          type: string
          description: وصف التقرير
          example: تقرير شامل للمبيعات والإيرادات الأسبوعية
        reportType:
          type: string
          description: نوع التقرير
          enum:
            - daily_summary
            - weekly_report
            - monthly_report
            - revenue_report
            - user_activity
            - product_performance
            - service_analytics
            - support_metrics
            - custom_report
          example: weekly_report
        frequency:
          type: string
          description: التكرار
          enum:
            - daily
            - weekly
            - monthly
            - quarterly
          example: weekly
        formats:
          type: array
          description: تنسيقات التقرير
          example:
            - pdf
          items:
            type: string
            enum:
              - pdf
              - excel
              - csv
              - json
              - html
        recipients:
          description: عناوين البريد الإلكتروني للمستلمين
          example:
            - admin@example.com
            - manager@example.com
          type: array
          items:
            type: string
        filters:
          type: object
          description: فلاتر إضافية
          example:
            includeCharts: true
            dateRange:
              months: 3
        config:
          type: object
          description: إعدادات إضافية
          example:
            includeCharts: true
            branding:
              companyName: شركة الطاقة الشمسية
      required:
        - name
        - description
        - reportType
        - frequency
    CreateServiceRequestDto:
      type: object
      properties: {}
    AcceptOfferDto:
      type: object
      properties: {}
    RateServiceDto:
      type: object
      properties: {}
    CreateOfferDto:
      type: object
      properties: {}
    UpdateOfferDto:
      type: object
      properties: {}
    AddVariantDto:
      type: object
      properties: {}
    SetVariantPriceDto:
      type: object
      properties: {}
    CreateExchangeRateDto:
      type: object
      properties: {}
    UpdateExchangeRateDto:
      type: object
      properties: {}
    ConvertCurrencyDto:
      type: object
      properties: {}
    BulkUpdateExchangeRatesDto:
      type: object
      properties: {}
    CreateBrandDto:
      type: object
      properties:
        name:
          type: string
          example: Apple
          description: Brand name
        image:
          type: string
          example: https://example.com/apple-logo.png
          description: Brand image URL
        description:
          type: string
          example: Leading technology company
        isActive:
          type: boolean
          example: true
        sortOrder:
          type: number
          example: 0
        metadata:
          type: object
      required:
        - name
        - image
    UpdateBrandDto:
      type: object
      properties:
        name:
          type: string
          example: Apple
        image:
          type: string
          example: https://example.com/apple-logo.png
        description:
          type: string
          example: Leading technology company
        isActive:
          type: boolean
          example: true
        sortOrder:
          type: number
          example: 0
        metadata:
          type: object
    UploadFileDto:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: File to upload
        folder:
          type: string
          description: Folder to upload to
          example: products
        customFilename:
          type: string
          description: Custom filename (optional)
          example: my-image.jpg
      required:
        - file
    DeleteFileDto:
      type: object
      properties:
        filePath:
          type: string
          description: Path of the file to delete
          example: uploads/my-image.jpg
      required:
        - filePath
    UploadMediaDto:
      type: object
      properties: {}
    UpdateMediaDto:
      type: object
      properties: {}
